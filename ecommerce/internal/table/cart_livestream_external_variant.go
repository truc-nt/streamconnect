//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var CartLivestreamExternalVariant = newCartLivestreamExternalVariantTable("public", "cart_livestream_external_variant", "")

type cartLivestreamExternalVariantTable struct {
	postgres.Table

	// Columns
	IDCartLivestreamExternalVariant postgres.ColumnInteger
	FkCart                          postgres.ColumnInteger
	FkLivestreamExternalVariant     postgres.ColumnInteger
	Quantity                        postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type CartLivestreamExternalVariantTable struct {
	cartLivestreamExternalVariantTable

	EXCLUDED cartLivestreamExternalVariantTable
}

// AS creates new CartLivestreamExternalVariantTable with assigned alias
func (a CartLivestreamExternalVariantTable) AS(alias string) *CartLivestreamExternalVariantTable {
	return newCartLivestreamExternalVariantTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CartLivestreamExternalVariantTable with assigned schema name
func (a CartLivestreamExternalVariantTable) FromSchema(schemaName string) *CartLivestreamExternalVariantTable {
	return newCartLivestreamExternalVariantTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CartLivestreamExternalVariantTable with assigned table prefix
func (a CartLivestreamExternalVariantTable) WithPrefix(prefix string) *CartLivestreamExternalVariantTable {
	return newCartLivestreamExternalVariantTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CartLivestreamExternalVariantTable with assigned table suffix
func (a CartLivestreamExternalVariantTable) WithSuffix(suffix string) *CartLivestreamExternalVariantTable {
	return newCartLivestreamExternalVariantTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCartLivestreamExternalVariantTable(schemaName, tableName, alias string) *CartLivestreamExternalVariantTable {
	return &CartLivestreamExternalVariantTable{
		cartLivestreamExternalVariantTable: newCartLivestreamExternalVariantTableImpl(schemaName, tableName, alias),
		EXCLUDED:                           newCartLivestreamExternalVariantTableImpl("", "excluded", ""),
	}
}

func newCartLivestreamExternalVariantTableImpl(schemaName, tableName, alias string) cartLivestreamExternalVariantTable {
	var (
		IDCartLivestreamExternalVariantColumn = postgres.IntegerColumn("id_cart_livestream_external_variant")
		FkCartColumn                          = postgres.IntegerColumn("fk_cart")
		FkLivestreamExternalVariantColumn     = postgres.IntegerColumn("fk_livestream_external_variant")
		QuantityColumn                        = postgres.IntegerColumn("quantity")
		allColumns                            = postgres.ColumnList{IDCartLivestreamExternalVariantColumn, FkCartColumn, FkLivestreamExternalVariantColumn, QuantityColumn}
		mutableColumns                        = postgres.ColumnList{FkCartColumn, FkLivestreamExternalVariantColumn, QuantityColumn}
	)

	return cartLivestreamExternalVariantTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		IDCartLivestreamExternalVariant: IDCartLivestreamExternalVariantColumn,
		FkCart:                          FkCartColumn,
		FkLivestreamExternalVariant:     FkLivestreamExternalVariantColumn,
		Quantity:                        QuantityColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
