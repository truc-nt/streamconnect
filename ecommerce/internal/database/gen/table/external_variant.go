//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var ExternalVariant = newExternalVariantTable("public", "external_variant", "")

type externalVariantTable struct {
	postgres.Table

	// Columns
	IDExternalVariant        postgres.ColumnInteger
	FkExternalShop           postgres.ColumnInteger
	FkVariant                postgres.ColumnInteger
	ExternalProductIDMapping postgres.ColumnString
	ExternalIDMapping        postgres.ColumnString
	Sku                      postgres.ColumnString
	Name                     postgres.ColumnString
	Status                   postgres.ColumnString
	Option                   postgres.ColumnString
	Price                    postgres.ColumnFloat
	ImageURL                 postgres.ColumnString
	CreatedAt                postgres.ColumnTimestamp
	UpdatedAt                postgres.ColumnTimestamp

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type ExternalVariantTable struct {
	externalVariantTable

	EXCLUDED externalVariantTable
}

// AS creates new ExternalVariantTable with assigned alias
func (a ExternalVariantTable) AS(alias string) *ExternalVariantTable {
	return newExternalVariantTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ExternalVariantTable with assigned schema name
func (a ExternalVariantTable) FromSchema(schemaName string) *ExternalVariantTable {
	return newExternalVariantTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ExternalVariantTable with assigned table prefix
func (a ExternalVariantTable) WithPrefix(prefix string) *ExternalVariantTable {
	return newExternalVariantTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ExternalVariantTable with assigned table suffix
func (a ExternalVariantTable) WithSuffix(suffix string) *ExternalVariantTable {
	return newExternalVariantTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newExternalVariantTable(schemaName, tableName, alias string) *ExternalVariantTable {
	return &ExternalVariantTable{
		externalVariantTable: newExternalVariantTableImpl(schemaName, tableName, alias),
		EXCLUDED:             newExternalVariantTableImpl("", "excluded", ""),
	}
}

func newExternalVariantTableImpl(schemaName, tableName, alias string) externalVariantTable {
	var (
		IDExternalVariantColumn        = postgres.IntegerColumn("id_external_variant")
		FkExternalShopColumn           = postgres.IntegerColumn("fk_external_shop")
		FkVariantColumn                = postgres.IntegerColumn("fk_variant")
		ExternalProductIDMappingColumn = postgres.StringColumn("external_product_id_mapping")
		ExternalIDMappingColumn        = postgres.StringColumn("external_id_mapping")
		SkuColumn                      = postgres.StringColumn("sku")
		NameColumn                     = postgres.StringColumn("name")
		StatusColumn                   = postgres.StringColumn("status")
		OptionColumn                   = postgres.StringColumn("option")
		PriceColumn                    = postgres.FloatColumn("price")
		ImageURLColumn                 = postgres.StringColumn("image_url")
		CreatedAtColumn                = postgres.TimestampColumn("created_at")
		UpdatedAtColumn                = postgres.TimestampColumn("updated_at")
		allColumns                     = postgres.ColumnList{IDExternalVariantColumn, FkExternalShopColumn, FkVariantColumn, ExternalProductIDMappingColumn, ExternalIDMappingColumn, SkuColumn, NameColumn, StatusColumn, OptionColumn, PriceColumn, ImageURLColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns                 = postgres.ColumnList{FkExternalShopColumn, FkVariantColumn, ExternalProductIDMappingColumn, ExternalIDMappingColumn, SkuColumn, NameColumn, StatusColumn, OptionColumn, PriceColumn, ImageURLColumn, CreatedAtColumn, UpdatedAtColumn}
	)

	return externalVariantTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		IDExternalVariant:        IDExternalVariantColumn,
		FkExternalShop:           FkExternalShopColumn,
		FkVariant:                FkVariantColumn,
		ExternalProductIDMapping: ExternalProductIDMappingColumn,
		ExternalIDMapping:        ExternalIDMappingColumn,
		Sku:                      SkuColumn,
		Name:                     NameColumn,
		Status:                   StatusColumn,
		Option:                   OptionColumn,
		Price:                    PriceColumn,
		ImageURL:                 ImageURLColumn,
		CreatedAt:                CreatedAtColumn,
		UpdatedAt:                UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
