//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var ExtVariant = newExtVariantTable("public", "ext_variant", "")

type extVariantTable struct {
	postgres.Table

	// Columns
	IDExtVariant        postgres.ColumnInteger
	FkExtShop           postgres.ColumnInteger
	FkVariant           postgres.ColumnInteger
	ExtProductIDMapping postgres.ColumnString
	ExtIDMapping        postgres.ColumnString
	Sku                 postgres.ColumnString
	Name                postgres.ColumnString
	Status              postgres.ColumnString
	Option              postgres.ColumnString
	Price               postgres.ColumnFloat
	ImageURL            postgres.ColumnString
	CreatedAt           postgres.ColumnTimestamp
	UpdatedAt           postgres.ColumnTimestamp

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type ExtVariantTable struct {
	extVariantTable

	EXCLUDED extVariantTable
}

// AS creates new ExtVariantTable with assigned alias
func (a ExtVariantTable) AS(alias string) *ExtVariantTable {
	return newExtVariantTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ExtVariantTable with assigned schema name
func (a ExtVariantTable) FromSchema(schemaName string) *ExtVariantTable {
	return newExtVariantTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ExtVariantTable with assigned table prefix
func (a ExtVariantTable) WithPrefix(prefix string) *ExtVariantTable {
	return newExtVariantTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ExtVariantTable with assigned table suffix
func (a ExtVariantTable) WithSuffix(suffix string) *ExtVariantTable {
	return newExtVariantTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newExtVariantTable(schemaName, tableName, alias string) *ExtVariantTable {
	return &ExtVariantTable{
		extVariantTable: newExtVariantTableImpl(schemaName, tableName, alias),
		EXCLUDED:        newExtVariantTableImpl("", "excluded", ""),
	}
}

func newExtVariantTableImpl(schemaName, tableName, alias string) extVariantTable {
	var (
		IDExtVariantColumn        = postgres.IntegerColumn("id_ext_variant")
		FkExtShopColumn           = postgres.IntegerColumn("fk_ext_shop")
		FkVariantColumn           = postgres.IntegerColumn("fk_variant")
		ExtProductIDMappingColumn = postgres.StringColumn("ext_product_id_mapping")
		ExtIDMappingColumn        = postgres.StringColumn("ext_id_mapping")
		SkuColumn                 = postgres.StringColumn("sku")
		NameColumn                = postgres.StringColumn("name")
		StatusColumn              = postgres.StringColumn("status")
		OptionColumn              = postgres.StringColumn("option")
		PriceColumn               = postgres.FloatColumn("price")
		ImageURLColumn            = postgres.StringColumn("image_url")
		CreatedAtColumn           = postgres.TimestampColumn("created_at")
		UpdatedAtColumn           = postgres.TimestampColumn("updated_at")
		allColumns                = postgres.ColumnList{IDExtVariantColumn, FkExtShopColumn, FkVariantColumn, ExtProductIDMappingColumn, ExtIDMappingColumn, SkuColumn, NameColumn, StatusColumn, OptionColumn, PriceColumn, ImageURLColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns            = postgres.ColumnList{FkExtShopColumn, FkVariantColumn, ExtProductIDMappingColumn, ExtIDMappingColumn, SkuColumn, NameColumn, StatusColumn, OptionColumn, PriceColumn, ImageURLColumn, CreatedAtColumn, UpdatedAtColumn}
	)

	return extVariantTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		IDExtVariant:        IDExtVariantColumn,
		FkExtShop:           FkExtShopColumn,
		FkVariant:           FkVariantColumn,
		ExtProductIDMapping: ExtProductIDMappingColumn,
		ExtIDMapping:        ExtIDMappingColumn,
		Sku:                 SkuColumn,
		Name:                NameColumn,
		Status:              StatusColumn,
		Option:              OptionColumn,
		Price:               PriceColumn,
		ImageURL:            ImageURLColumn,
		CreatedAt:           CreatedAtColumn,
		UpdatedAt:           UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
