//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var LivestreamProductFollower = newLivestreamProductFollowerTable("public", "livestream_product_follower", "")

type livestreamProductFollowerTable struct {
	postgres.Table

	// Columns
	FkUser              postgres.ColumnInteger
	FkLivestreamProduct postgres.ColumnInteger
	CreatedAt           postgres.ColumnTimestamp

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type LivestreamProductFollowerTable struct {
	livestreamProductFollowerTable

	EXCLUDED livestreamProductFollowerTable
}

// AS creates new LivestreamProductFollowerTable with assigned alias
func (a LivestreamProductFollowerTable) AS(alias string) *LivestreamProductFollowerTable {
	return newLivestreamProductFollowerTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new LivestreamProductFollowerTable with assigned schema name
func (a LivestreamProductFollowerTable) FromSchema(schemaName string) *LivestreamProductFollowerTable {
	return newLivestreamProductFollowerTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new LivestreamProductFollowerTable with assigned table prefix
func (a LivestreamProductFollowerTable) WithPrefix(prefix string) *LivestreamProductFollowerTable {
	return newLivestreamProductFollowerTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new LivestreamProductFollowerTable with assigned table suffix
func (a LivestreamProductFollowerTable) WithSuffix(suffix string) *LivestreamProductFollowerTable {
	return newLivestreamProductFollowerTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newLivestreamProductFollowerTable(schemaName, tableName, alias string) *LivestreamProductFollowerTable {
	return &LivestreamProductFollowerTable{
		livestreamProductFollowerTable: newLivestreamProductFollowerTableImpl(schemaName, tableName, alias),
		EXCLUDED:                       newLivestreamProductFollowerTableImpl("", "excluded", ""),
	}
}

func newLivestreamProductFollowerTableImpl(schemaName, tableName, alias string) livestreamProductFollowerTable {
	var (
		FkUserColumn              = postgres.IntegerColumn("fk_user")
		FkLivestreamProductColumn = postgres.IntegerColumn("fk_livestream_product")
		CreatedAtColumn           = postgres.TimestampColumn("created_at")
		allColumns                = postgres.ColumnList{FkUserColumn, FkLivestreamProductColumn, CreatedAtColumn}
		mutableColumns            = postgres.ColumnList{CreatedAtColumn}
	)

	return livestreamProductFollowerTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		FkUser:              FkUserColumn,
		FkLivestreamProduct: FkLivestreamProductColumn,
		CreatedAt:           CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
