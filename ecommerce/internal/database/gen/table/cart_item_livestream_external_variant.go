//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var CartItemLivestreamExternalVariant = newCartItemLivestreamExternalVariantTable("public", "cart_item_livestream_external_variant", "")

type cartItemLivestreamExternalVariantTable struct {
	postgres.Table

	// Columns
	ID         postgres.ColumnInteger
	FkCartItem postgres.ColumnInteger
	Fk         postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type CartItemLivestreamExternalVariantTable struct {
	cartItemLivestreamExternalVariantTable

	EXCLUDED cartItemLivestreamExternalVariantTable
}

// AS creates new CartItemLivestreamExternalVariantTable with assigned alias
func (a CartItemLivestreamExternalVariantTable) AS(alias string) *CartItemLivestreamExternalVariantTable {
	return newCartItemLivestreamExternalVariantTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CartItemLivestreamExternalVariantTable with assigned schema name
func (a CartItemLivestreamExternalVariantTable) FromSchema(schemaName string) *CartItemLivestreamExternalVariantTable {
	return newCartItemLivestreamExternalVariantTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CartItemLivestreamExternalVariantTable with assigned table prefix
func (a CartItemLivestreamExternalVariantTable) WithPrefix(prefix string) *CartItemLivestreamExternalVariantTable {
	return newCartItemLivestreamExternalVariantTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CartItemLivestreamExternalVariantTable with assigned table suffix
func (a CartItemLivestreamExternalVariantTable) WithSuffix(suffix string) *CartItemLivestreamExternalVariantTable {
	return newCartItemLivestreamExternalVariantTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCartItemLivestreamExternalVariantTable(schemaName, tableName, alias string) *CartItemLivestreamExternalVariantTable {
	return &CartItemLivestreamExternalVariantTable{
		cartItemLivestreamExternalVariantTable: newCartItemLivestreamExternalVariantTableImpl(schemaName, tableName, alias),
		EXCLUDED:                               newCartItemLivestreamExternalVariantTableImpl("", "excluded", ""),
	}
}

func newCartItemLivestreamExternalVariantTableImpl(schemaName, tableName, alias string) cartItemLivestreamExternalVariantTable {
	var (
		IDColumn         = postgres.IntegerColumn("id")
		FkCartItemColumn = postgres.IntegerColumn("fk_cart_item")
		FkColumn         = postgres.IntegerColumn("fk")
		allColumns       = postgres.ColumnList{IDColumn, FkCartItemColumn, FkColumn}
		mutableColumns   = postgres.ColumnList{FkCartItemColumn, FkColumn}
	)

	return cartItemLivestreamExternalVariantTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:         IDColumn,
		FkCartItem: FkCartItemColumn,
		Fk:         FkColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
