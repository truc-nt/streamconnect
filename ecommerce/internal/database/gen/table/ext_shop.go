//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var ExtShop = newExtShopTable("public", "ext_shop", "")

type extShopTable struct {
	postgres.Table

	// Columns
	IDExtShop   postgres.ColumnInteger
	FkShop      postgres.ColumnInteger
	FkEcommerce postgres.ColumnInteger
	Name        postgres.ColumnString
	Status      postgres.ColumnString
	CreatedAt   postgres.ColumnTimestamp
	UpdatedAt   postgres.ColumnTimestamp

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type ExtShopTable struct {
	extShopTable

	EXCLUDED extShopTable
}

// AS creates new ExtShopTable with assigned alias
func (a ExtShopTable) AS(alias string) *ExtShopTable {
	return newExtShopTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ExtShopTable with assigned schema name
func (a ExtShopTable) FromSchema(schemaName string) *ExtShopTable {
	return newExtShopTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ExtShopTable with assigned table prefix
func (a ExtShopTable) WithPrefix(prefix string) *ExtShopTable {
	return newExtShopTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ExtShopTable with assigned table suffix
func (a ExtShopTable) WithSuffix(suffix string) *ExtShopTable {
	return newExtShopTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newExtShopTable(schemaName, tableName, alias string) *ExtShopTable {
	return &ExtShopTable{
		extShopTable: newExtShopTableImpl(schemaName, tableName, alias),
		EXCLUDED:     newExtShopTableImpl("", "excluded", ""),
	}
}

func newExtShopTableImpl(schemaName, tableName, alias string) extShopTable {
	var (
		IDExtShopColumn   = postgres.IntegerColumn("id_ext_shop")
		FkShopColumn      = postgres.IntegerColumn("fk_shop")
		FkEcommerceColumn = postgres.IntegerColumn("fk_ecommerce")
		NameColumn        = postgres.StringColumn("name")
		StatusColumn      = postgres.StringColumn("status")
		CreatedAtColumn   = postgres.TimestampColumn("created_at")
		UpdatedAtColumn   = postgres.TimestampColumn("updated_at")
		allColumns        = postgres.ColumnList{IDExtShopColumn, FkShopColumn, FkEcommerceColumn, NameColumn, StatusColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns    = postgres.ColumnList{FkShopColumn, FkEcommerceColumn, NameColumn, StatusColumn, CreatedAtColumn, UpdatedAtColumn}
	)

	return extShopTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		IDExtShop:   IDExtShopColumn,
		FkShop:      FkShopColumn,
		FkEcommerce: FkEcommerceColumn,
		Name:        NameColumn,
		Status:      StatusColumn,
		CreatedAt:   CreatedAtColumn,
		UpdatedAt:   UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
